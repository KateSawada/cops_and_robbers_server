openapi: 3.0.3
info:
  title: Swagger Keidoro - OpenAPI 3.0
  description: |-
    ケイドロ用のAPI

  version: 1.0.11

servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: room
    description: room機能
    externalDocs:
      description: Find out more room
      url: http://swagger.io
  - name: team
    description: 自分の所属するチーム(逮捕中かどうかも含め)わかるようにする
    externalDocs:
      description: Find out more about our team
      url: http://swagger.io
  - name: position
    description: 位置情報
    externalDocs:
      description: Find out more about our team
      url: http://swagger.io
  - name: chat
    description: chat機能
    externalDocs:
      description: ミッションの発令など
      url: http://swagger.io

paths:
  /room/create:
    post:
      tags:
        - room
      summary: roomを作る
      description: roomを作った人にroomIDを渡すようにする
      operationId: createRoom
      requestBody:
        description: roomを作る
        content:
          application/json:
            schema:
              type: object
              properties: 
                roomName: {type: string, example: "JACKドロケイroom"}
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Room'
        '405':
          description: Invalid input
      security:
        - api_key: []
        
  /room/join:
    post:
      tags:
        - room
      summary: roomに参加する
      description: roomIDを持った人がそのroomに参加できるようにする
      operationId: joinRoom
      requestBody:
        description: roomに入る
        content:
          application/json:
            schema:
              type: object
              properties: 
                roomID:
                  type: integer
                userName:
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '400':
          description: Invalid status value
      security:
        - api_key: []
  /team/check:
    get:
      tags:
        - team
      summary: 誰がどのチームに入ってるかを返す
      description: Roomに参加している人全ての情報(警察/泥棒/捕まってる)を返す
      operationId: checkTeam
      
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '400':
          description: Invalid tag value
      security:
        - api_key: []
  /update/position:
    get:
      tags:
        - position
      summary: 位置情報を取得する
      description: 位置情報を取得する
      operationId: GetPosition
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Position'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
       
    post:
      tags:
        - position
      summary: 自分の位置情報を送る
      description: '自分の位置情報を送る'
      operationId: sendPosition
      parameters:
        - name: userName
          in: query
          description: 送る人の名前
          required: true
          schema:
            type: string
        
        - name: GPS
          in: query
          description: 送る人の位置情報
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input
      
      security:
        - api_key: []
  /chat/all:
    get:
      tags:
        - chat
      summary: チャットの内容を見る
      description: チャットの内容を見る
      operationId: GetChatContent
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        
    post:
      tags:
        - chat
      summary: チャットで投稿する
      description: '送った人の名前と時間と送ったメッセージ(画像も含む)が送れる'
      operationId: sendChat
      parameters:
        - name: userName
          in: query
          description: 送る人の名前
          required: true
          schema:
            type: string
        
        - name: message
          in: query
          description: 送るメッセージの内容
          schema:
            type: string
        - name: GPS
          in: query
          description: 送る人の位置情報
          schema:
            type: string    
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Chat'
        '405':
          description: Invalid input
      security:
        - api_key: []
  
components:
  schemas:
    
    Room:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        name:
          type: string
        member:
          $ref: '#/components/schemas/User'
      xml:
        name: room
    
    Mission:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        contents:
          type: string
          example: "一時間以内に○○に泥棒が○○人来なかったら警察が一人増えます"
      xml:
        name: mission
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        
        userStatus:
          type: string
          description: User Status
          enum:
            - police
            - thief
            - arrested
          
      xml:
        name: user
    Chat:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        messages:
          type: string
      xml:
        name: chat
   
    Position:
      type: object
      properties:
        id:
          type: integer
          format: int64
        Username:
          type: string
     
      xml:
        name: chat
        
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Room:
      description: Room object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Room'
        application/xml:
          schema:
            $ref: '#/components/schemas/Room'
    
  securitySchemes:
    
    api_key:
      type: apiKey
      name: api_key
      in: header